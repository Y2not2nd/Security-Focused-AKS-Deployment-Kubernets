apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
{{ include "mongodb.labels" . | indent 4 }}
spec:
  serviceName: {{ include "mongodb.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
{{ include "mongodb.labels" . | indent 8 }}
    spec:
      containers:
        - name: mongodb
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--bind_ip_all"
          ports:
            - containerPort: 27017
              name: mongodb
{{ if .Values.auth.enabled }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: password
{{- end }}
          volumeMounts:
            - name: data
              mountPath: /data/db
{{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
{{- if .Values.metrics.enabled }}
        - name: mongodb-exporter
          image: bitnami/mongodb-exporter:0.40.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: connectionString
          ports:
            - containerPort: {{ .Values.metrics.port }}
              name: metrics
{{- end }}
{{- if not .Values.persistence.enabled }}
      volumes:
        - name: data
          emptyDir: {}
{{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
{{ toYaml .Values.persistence.accessModes | indent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName }}
{{- end }}
{{- end }}
